@model EmployeeEditViewModel

<h1>Edit</h1>

<div class="container">
    @using (Html.BeginForm("Edit", "EmployeesAdmin", FormMethod.Post, new { @class = "" }))
    {
        <div class="d-flex flex-wrap flex-column">
            @*HACK: no other way to pass these values to the VM in the POST version of the Edit method in the controller*@
            <input hidden asp-for="Id" />
            <input hidden asp-for="Hired" />
            <input hidden asp-for="IsActive" />
            <input hidden asp-for="Fired" />
            
            <div>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { placeholder = "First name" } })
            </div>
            <div>
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { placeholder = "Middle name" } })

            </div>
            <div>
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { placeholder = "Last name" } })
            </div>
            <div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "Email" } })
            </div>
            <div>
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { placeholder = "Phone number" } })
            </div>
            <div>
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { placeholder = "Username" } })
            </div>
            <div>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { placeholder = "Password" } })
            </div>
            <div>
                @Html.EditorFor(model => model.EGN, new { htmlAttributes = new { placeholder = "EGN" } })
            </div>
            <div>
                <label>@(Model.IsActive ? "YES" : "NO")</label>
            </div>

        </div>

        @*<input type="submit" value="Save" class="btn btn-primary my-2" />*@
        <button class="btn btn-primary">
            Save
        </button>
    }
</div>