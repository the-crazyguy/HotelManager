@model RoomIndexViewModel

<h1>Rooms</h1>
<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            @using (Html.BeginForm("Index", "Rooms", FormMethod.Get, new { @class = "navbar-search" }))
            {
                <div class="d-flex flex-wrap ">
                    <div class="form-group mr-auto">
                        <label>Capacity</label>
                        <span>
                            @Html.EditorFor(model => model.Filter.Capacity, new { htmlAttributes = new { placeholder = "Capacity" } })
                        </span>
                    </div>
                    <div class="form-group mr-auto">
                        <label>Type</label>
                        <span>
                            @Html.DropDownListFor(model => model.Filter.Type, new List<SelectListItem>
                        {
                           new SelectListItem{Text="-none-",Value="" },
                           new SelectListItem{Text="Single Bed",Value="Single Bed" },
                           new SelectListItem{Text="Double Bed",Value="Double Bed" },
                           new SelectListItem{Text="Apartment",Value="Apartment" },
                           new SelectListItem{Text="Penthouse",Value="Penthouse" },
                            })
                        </span>
                    </div>
                    <div class="form-group mr-auto">
                        <label>Available</label>
                        <span>
                            @Html.EditorFor(model => model.Filter.IsAvailable, new { htmlAttributes = new { placeholder = "Is Available" } })
                        </span>
                    </div>
                </div>

                <div class="d-flex flex-wrap">
                    <button class="btn btn-primary">
                        Filter
                    </button>
                    <div class="ml-auto">
                        <a asp-action="Edit" asp-controller="Rooms" class="btn btn-success">
                            Create
                        </a>
                    </div>
                </div>
            }
        </div>


        <div>
            <div class="card-body table-responsive">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>RoomNumber</th>
                            <th>Capacity</th>
                            <th>Type</th>
                            <th>Available</th>
                            <th>Adult Bed Price</th>
                            <th>Child Bed Price</th>
                            <th>Actions</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td class="text-nowrap align-middle">@item.RoomNumber</td>
                                <td class="text-nowrap align-middle">@item.Capacity</td>
                                <td class="align-middle">@item.Type</td>
                                @*HACK: putting unicode/hex/html code, html entity and css code does not work with the ternary operator*@
                                <td class="text-center align-middle">@(item.IsAvailable ? "✔" : "❌")</td>
                                <td class="text-nowrap align-middle">@item.AdultBedPrice</td>
                                <td class="text-nowrap align-middle">@item.ChildBedPrice</td>
                                <td>
                                    <div class="d-flex flex-wrap justify-content-center">
                                        <a asp-controller="Rooms" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info m-1">Details</a>
                                        @if (User.IsInRole(WebConstants.AdminRole))
                                        {
                                            <a asp-controller="Rooms" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary m-1">Edit</a>
                                            <a asp-controller="Rooms" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger m-1">Delete</a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="d-flex flex-wrap justify-content-center">
            <ul class="pagination">
                @for (int i = 1; i <= Model.Pager.Pages; i++)
                {
                    <li class="page-item @(i == Model.Pager.CurrentPage ? "active" : "")">
                        <a asp-route-Pager.CurrentPage="@i"
                           class="page-link">@i</a>
                    </li>
                } @*asp-route-Filter.Capacity="@Model.Filter.Capacity"
                    asp-route-Filter.Type="@Model.Filter.Type"
                    asp-route-Filter.IsAvailable="@Model.Filter.IsAvailable"*@
            </ul>
        </div>
    </div>
</div>

